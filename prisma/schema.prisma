// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}



model User {
  id            String    @id @default(uuid())
  name          String?
  email         String?   @unique   
  username      String?   @unique
  password      String?
  emailVerified DateTime?  @map("email_verified")
  image         String?
  role          userRole      //@default(user)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  pakans        Pakan[]
  @@map("users")
}

enum userRole {
  user
  pekerja
  owner
}


model Account {
  id                 String    @id @default(cuid())
  userId             String    @map("user_id")
  type               String?
  provider           String
  providerAccountId  String    @map("provider_account_id")
  token_type         String?
  refresh_token      String?   @db.Text
  access_token       String?   @db.Text
  expires_at         Int?
  scope              String?
  id_token           String? @db.Text
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  userId       String?  @map("user_id")
  sessionToken String   @db.VarChar(255) @map("session_token") @unique
  accessToken  String?  @db.Text @map("access_token")
  expires      DateTime
  user         User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("sessions")
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

// modul sensor dht 22 temperature and humidity 
model Sensor {
  id           String   @id @default(cuid())
  temperature  Float?
  humidity     Float?
  createdAt    DateTime @default(now())
  @@map("sensors")
}

// model kambing 
model Kambing {
  id_kambing           String   @id @default(cuid())
  nama_kambing        String
  jenis_kambing       String?

  jenis_kelamin       String?
  tanggal_lahir       DateTime?
  bobot               Float?
  status              status?
  rfid                String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

// relasi kambing ke kandang
    kandang    Kandang? @relation(fields: [id_kandang], references: [id_kandang])
  id_kandang          String?  @map("id_kandang")

  
  @@map("kambing")
}

// enum status kamibing hidup mati terjual sakit 
enum status {
  hidup
  mati
  terjual
  sakit
}

// kandang
model Kandang {
  id_kandang           String   @id @default(cuid())
  nama_kandang        String
  gambar_kandang      String?
  id_kambing          String?
  id_pakan            String?
  id_sensor           String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

// relasi kandang ke kambing
  kambing Kambing[]
  pakans Pakan[]
    mq135s Mq135[]
    dht22s Dht22[]

  @@map("kandang")
}

// pakan
model Pakan {
  id_pakan           String   @id @default(cuid())
  id_user String?
  user    User? @relation(fields: [id_user], references: [id])
  id_kandang String?
  kandang    Kandang? @relation(fields: [id_kandang], references: [id_kandang])
  nama_pakan        String?
  jenis_pakan       String?
  satuan_pakan      String?
  jadwal_pakan      DateTime?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  @@map("pakan")
}

// mq-135
model Mq135 {
  id_mq135           String   @id @default(cuid())
  id_kandang String?
  kandang    Kandang? @relation(fields: [id_kandang], references: [id_kandang])
  amonia             Float?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  @@map("mq135")
}

// dht22
model Dht22 {
  id_dht22           String   @id @default(cuid())
  id_kandang         String?
  kandang    Kandang? @relation(fields: [id_kandang], references: [id_kandang])
  temperature        Float?
  humidity           Float?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  @@map("dht22")
}

// notifications
model notifications {
  id_notifications           String   @id @default(cuid())
  message_notifications String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}